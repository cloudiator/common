syntax = "proto3";

package application;

option java_package = "org.cloudiator.messages.entities";

import "commonEntities.proto";

message Task {
  string name = 1;
  repeated Port ports = 2;
  repeated TaskInterface interfaces = 3;
  repeated common.Requirement requirements = 4;
  common.Optimization optimization = 5;
  TaskType taskType = 6;
}

enum TaskType {
  BATCH = 0;
  SERVICE = 1;
}

message TaskInterface {
  oneof taskInterface {
    DockerInterface dockerInterface = 1;
    LanceInterface lanceInterface = 2;
    SparkInterface sparkInterface = 3;
    FaasInterface faasInterface = 4;
  }
}

message Port {
  oneof port {
    PortProvided portProvided = 1;
    PortRequired portRequired = 2;
  }
}

message DockerInterface {
  string dockerImage = 1;
  map<string,string> environment = 2;
}

enum ContainerType {
  NATIVE = 0;
  DOCKER = 1;
  BOTH = 2;
}

message LanceInterface {
  string init = 1;
  string preInstall = 2;
  string install = 3;
  string postInstall = 4;
  string preStart = 5;
  string start = 6;
  string startDetection = 7;
  string stopDetection = 8;
  string postStart = 9;
  string preStop = 10;
  string stop = 11;
  string postStop = 12;
  string shutdown = 13;
  ContainerType containerType = 14;
}

message FaasInterface {
  string functionName = 1;
  string sourceCodeUrl = 2;
  string handler = 3;
  string runtime = 4;
  repeated Trigger triggers = 5;
  int32 timeout = 6;
  int32 memory = 7;
  map<string, string> functionEnvironment = 8;
}

message Trigger {
  oneof trigger {
    HttpTrigger httpTrigger = 1;
  }
}

message HttpTrigger {
  string httpPath = 1;
  string httpMethod = 2;
}

message PortProvided {
  string name = 1;
  int32 port = 2;
}

message PortRequired {
  string name = 1;
  string updateAction = 2;
  bool isMandatory = 3;
}

message SparkInterface {
  string file = 1;
  string className = 2;
  repeated string arguments = 3;
  map<string, string> sparkArguments = 4;
  map<string, string> sparkConfiguration = 5;
}
