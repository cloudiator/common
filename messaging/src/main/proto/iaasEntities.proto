syntax = "proto3";

package iaas;

option java_package = "org.cloudiator.messages.entities";

import "commonEntities.proto";

message NewCloud {
  string endpoint = 1;
  Api api = 2;
  Credential credential = 3;
  Configuration configuration = 4;
  CloudType cloudType = 5;
}

message Cloud {
  string id = 1;
  string endpoint = 2;
  Api api = 3;
  Credential credential = 4;
  Configuration configuration = 5;
  CloudType cloudType = 6;
  CloudState state = 7;
  string diagnostic = 8;
  string userId = 9;
}

enum CloudState {
  CLOUD_STATE_NEW = 0;
  CLOUD_STATE_OK = 1;
  CLOUD_STATE_ERROR = 2;
  CLOUD_STATE_DELETED = 3;
}

enum CloudType {
  PUBLIC_CLOUD = 0;
  PRIVATE_CLOUD = 1;
}

message Quota {
  string remaining = 1;
  string locationId = 2;
  oneof quota {
    AttributeQuota attributeQuota = 3;
    OfferQuota offerQuota = 4;
  }
}

message AttributeQuota {
  Attribute attribute = 1;
}

message OfferQuota {
  OfferType offerType = 1;
  string id = 2;
}

enum OfferType {
  HARDWARE = 0;
  LOCATION = 1;
  IMAGE = 2;
}

enum Attribute {
  HARDWARE_CORES = 0;
  HARDWARE_RAM = 1;
  NODES_SIZE = 2;
}

message Api {
  string providerName = 1;
}

message Credential {
  string user = 1;
  string secret = 2;
}

message Configuration {
  map<string, string> properties = 1;
  string nodeGroup = 2;
}

message HardwareFlavor {
  string id = 1;
  string name = 2;
  string providerId = 3;
  int32 cores = 4;
  int64 ram = 5;
  double disk = 6;
  Location location = 7;
  DiscoveryItemState state = 8;
  string userId = 9;
}

message Image {
  string id = 1;
  string name = 2;
  string providerId = 3;
  common.OperatingSystem operationSystem = 4;
  Location location = 5;
  DiscoveryItemState state = 6;
  string userId = 7;
}

message Location {
  string id = 1;
  string name = 2;
  string providerId = 3;
  common.LocationScope locationScope = 4;
  bool isAssignable = 5;
  Location parent = 6;
  GeoLocation geoLocation = 7;
  DiscoveryItemState state = 8;
  string userId = 9;
}

message GeoLocation {
  string country = 1;
  double latitude = 2;
  double longitude = 3;
  string city = 4;
}

message VirtualMachineRequest {
  string name = 1;
  string image = 2;
  string location = 3;
  string hardware = 4;
}

message LoginCredential {
  string username = 1;
  string privateKey = 2;
  string password = 3;
}

message KeyPair {
  string privateKey = 1;
  string publicKey = 2;
}

message IpAddress {
  IpAddressType type = 1;
  IpVersion version = 2;
  string ip = 3;
}

enum IpAddressType {
  PUBLIC_IP = 0;
  PRIVATE_IP = 1;
}

enum IpVersion {
  V4 = 0;
  V6 = 1;
}

message VirtualMachine {
  string id = 1;
  string providerId = 2;
  string name = 3;
  Image image = 4;
  Location location = 5;
  HardwareFlavor hardware = 6;
  repeated IpAddress ipAddresses = 7;
  LoginCredential loginCredential = 8;
  string userId = 9;
  VirtualMachineState state = 10;
}

enum VirtualMachineState {
  VM_STATE_RUNNING = 0;
  VM_STATE_ERROR = 1;
}

enum DiscoveryItemState {
  DISCOVERY_NEW = 0;
  DISCOVERY_OK = 1;
  DISCOVERY_REMOTELY_DELETED = 2;
  DISCOVERY_LOCALLY_DELETED = 3;
  DISCOVERY_DISABLED = 4;
  DISCOVERY_DELETED = 5;
  DISCOVERY_UNKNOWN = 6;
}

message DiscoveryStatus {
  map<string, int32> status = 1;
}

